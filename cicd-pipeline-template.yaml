apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: api-pastry-pipeline
metadata:
  annotations:
    description: API Pastry Deployment Pipeline
  name: api-pastry-pipeline
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      name: api-pastry-pipeline
    name: api-pastry-pipeline
  spec:
    output: null
    postCommit: null
    resources: null
    runPolicy: Serial
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          node('nodejs') {
            /*
            stage ('Build in Dev') {
              openshiftBuild(buildConfig: 'api-pastry-impl',
                namespace: 'api-pastry-dev', showBuildLogs: 'true')
            }
            stage ('Deploy in Dev') {
              openshiftDeploy(namespace: 'api-pastry-dev',
                deploymentConfig: 'api-pastry-impl')
            }
            */

            stage('Test in Dev') {
              // Add implementation contract test here.
              microcksTest(server: 'openshift311',
                serviceId: 'API Pastry:1.0.0',
                testEndpoint: 'http://api-pastry-fuse-impl-api-pastry-dev.apps.144.76.24.92.nip.io',
                runnerType: 'POSTMAN', waitTime: 16, waitUnit: 'sec', verbose: 'true')
            }

            stage ('Promote to Prod') {
              openshiftTag(namespace: 'api-pastry-dev', sourceStream: 'api-pastry-fuse-impl',
                sourceTag: 'latest', destinationStream: 'api-pastry-fuse-impl', destinationTag: 'promoteToProd')
            }

            stage('Deploy to Prod') {
              openshiftDeploy(deploymentConfig: 'api-pastry-fuse-impl', namespace: 'api-pastry-prod')
              openshiftScale(deploymentConfig: 'api-pastry-fuse-impl', namespace: 'api-pastry-prod', replicaCount: '2')
              // Deploy the API to 3scale
              openshiftBuild(buildConfig: 'deploy-3scale-api-api-pastry-prod', namespace: 'microcks', showBuildLogs: 'true')
              // Force redeployment of gateway
              openshiftDeploy(deploymentConfig: 'api-pastry-api', namespace: 'api-pastry-prod')
            }

          }
      type: JenkinsPipeline
